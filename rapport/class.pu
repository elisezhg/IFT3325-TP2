@startuml Diagramme de classe
skinparam defaultFontName Courier 10 Pitch

class BitStuffer {
    {static} +stuff(bitstring: String): String
    {static} +destuff(bitstring: String): String
}

class CheckSumCalculator {
    {static} +computeCRC(bitstring: String, polynomial: String): String
    {static} +cyclicDivisionRest(bitstring: String, polynomial: String): String
    {static} -padLeft(str: String, pad: char, targetLength: int): String
    {static} -xor(s1: String, s2: String): String
}

class InvalidFrameException {

}

class CharFrame {
    {static} +TYPE_BITSIZE: int
    {static} +NUM_BITSIZE: int
    {static} +CRC_BITSIZE: int
    {static} +FLAG_BITSIZE: String
    -closed: boolean
    -type: String
    -num: String
    -data: String
    -crc: String
    -polynomial: String

	+CharFrame(flag:char, type:char, num:char, data:String, polynomial:String)
	+CharFrame(frame:String)
    +getType(): char
    +setType(type: char)
    +getNum(): int
    +setNum(num: int)
    +getData(): String
    +setData(data: String)
    +format(): String
    +isValid(): boolean
    {static} -padLeft(str: String, pad: char, targetLength: int): String
    -computeCRC()
}

class FrameFileReader {
    -reader: BufferedReader
    -polynomial: String

    +FrameFileReader(filename: String, polynomial: String)
    +getNextFrame(): CharFrame
}

class FrameFileWriter {
    -writer: BufferedWriter

    +write(frame: CharFrame)
    +close()
}

Class Receiver {
    {static} +CRC_CCITT: String
    {static} +WINDOW_SIZE: int
    {static} +MAX_NUM: int
    {static} +PRINT_PADDING: String
    -closed: boolean
    -serverSocket: ServerSocket
    -out: PrintWriter
    -in: BufferedReader
    -clientSocket: Socket
    -typeLastSent: char
    
    +listen(int: portNumber)
    +close()
    -sendReceipt(type: char, num: int)
}

Class Sender {
    {static} +CRC_CCITT: String
    {static} +WINDOW_SIZE: int
    {static} +MAX_NUM: int
    {static} +TIMEOUT_DELAY: int
    -sentFrames: LinkedList<CharFrame>
    -nextFrameNum: int
    -hostName: String
    -portNumber: int
    -socket: Socket
    -out: PrintWriter
    -int: BufferedReader

    +send(hostName: String, portNumber: int, filename: String) 
}

Class CLI {
    {static} +main()
}

Class Test {
    {static} +TEST_PORT: int
    {static} +REC_PORT: int
    {static} +PRINT_PADDING: String

    +randError(s: String): String
    +runTests()
}

CLI --> Test
Test --> Receiver
Test --> Sender

CLI --> Receiver
CLI --> Sender

Receiver --> CharFrame
Sender --> CharFrame

Receiver --> FrameFileWriter
Sender --> FrameFileReader

FrameFileWriter --> CharFrame
FrameFileReader --> CharFrame

CharFrame --> BitStuffer
CharFrame --> CheckSumCalculator
CharFrame --> InvalidFrameException

@enduml
